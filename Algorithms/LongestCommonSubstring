function LCSSM3(x, y, m, n){ //DP with tabulation(bottom - up approach)
    //cache array
    const memo = Array.from( {length : (m+1)}, () => {  return Array((n+1)).fill(undefined)})

    let result = 0

    for (i = 0; i<=m; i++){
        for(j=0; j<=n; j++){
            if (i == 0 || j == 0){
                memo[i][j] = 0
                
            }
            else if (x[i-1] == y[j-1]){
                 
                memo[i][j] = memo[i-1][j-1] + 1
                result = Math.max(result, memo[i][j])
                
            }
            else{
                memo[i][j] = 0
            }
        }
    }
    return result
}

console.log(LCSSM3('javaaid', 'javaid', 7, 6))
